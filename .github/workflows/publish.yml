# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Publish

on:
  release:
    types: [created]

jobs:
  publish-npm:
    name: Publish npm packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/
      - name: Install dependencies
        run: yarn
      - name: Build packages
        run: yarn build
      - name: Publish packages
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  publish-docker:
    name: Publish docker images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install dependencies
        run: yarn
      - name: Build packages
        run: yarn build
      - name: Pack packages for docker
        run: docker/pack.sh ${{ matrix.os }}
      - name: Login to GitHub Packages
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            latest
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Publish Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./docker/${{ matrix.os }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}-${{ matrix.os }}
          labels: ${{ steps.meta.outputs.labels }}
    strategy:
      matrix:
        os:
          - alpine
          - debian